[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|001'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|001",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|001",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|001",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|002a'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|002a",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|002a",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|002a",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|003'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|003",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|003",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|003",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|100'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|100",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|100",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|100",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|115'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|115",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|115",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|115",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|120'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|120",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|120",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|120",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|A87'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|A87",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|A87",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|A87",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|A95'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|A95",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|A95",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|A95",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|BIB'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|BIB",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|BIB",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|BIB",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|IDN'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|IDN",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|IDN",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|IDN",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|105'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|105",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|105",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|105",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|107'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|107",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|107",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|107",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|125'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|125",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|125",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|125",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|072'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|072",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|072",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|072",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|A98'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|A98",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|A98",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|A98",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|ABO'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|ABO",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|ABO",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|ABO",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "id",
    "expression": "grel:forNonBlank(forEach(value.cross('exemplare','titel_id'),r,forNonBlank(r.cells['E|A97'].value,v,v,'␀')).join('␞'),x,'␀␞'+x,null)",
    "onError": "set-to-blank",
    "newColumnName": "E|A97",
    "columnInsertIndex": 13
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "E|A97",
    "keyColumnName": "M|001",
    "mode": "separator",
    "separator": "␞",
    "regex": false
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "E|A97",
    "expression": "grel:value.replace('␀','')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]
